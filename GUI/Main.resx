<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        SUVORK5CYII=
</value>
  </data>
</root>